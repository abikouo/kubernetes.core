---
- name: Install env plugin in check mode
  kubernetes.core.helm_plugin:
    binary_path: "{{ helm_binary }}"
    state: present
    plugin_path: https://github.com/adamreese/helm-env
  register: check_install_env
  check_mode: true

- name: Ensure check_mode returned change
  ansible.builtin.assert:
    that:
      - check_install_env.changed

- name: Install env plugin
  kubernetes.core.helm_plugin:
    binary_path: "{{ helm_binary }}"
    state: present
    plugin_path: https://github.com/adamreese/helm-env
  register: install_env

- name: Ensure module reported change
  ansible.builtin.assert:
    that:
      - install_env.changed

- name: Gather info about all plugin
  helm_plugin_info:
    binary_path: "{{ helm_binary }}"
  register: plugin_info

- name: Ensure plugin_info has plugin_list attribute
  ansible.builtin.assert:
    that:
      - plugin_info.plugin_list is defined

- name: Install env plugin again
  kubernetes.core.helm_plugin:
    binary_path: "{{ helm_binary }}"
    state: present
    plugin_path: https://github.com/adamreese/helm-env
  register: install_env

- name: Ensure module did not reported change
  ansible.builtin.assert:
    that:
      - not install_env.changed

- name: Uninstall env plugin in check mode
  kubernetes.core.helm_plugin:
    binary_path: "{{ helm_binary }}"
    state: absent
    plugin_name: env
  register: check_uninstall_env
  check_mode: true

- name: Ensure module reported change in check_mode
  ansible.builtin.assert:
    that:
      - check_uninstall_env.changed

- name: Uninstall env plugin
  kubernetes.core.helm_plugin:
    binary_path: "{{ helm_binary }}"
    state: absent
    plugin_name: env
  register: uninstall_env

- name: Ensure module reported change
  ansible.builtin.assert:
    that:
      - uninstall_env.changed

- name: Uninstall env plugin again
  kubernetes.core.helm_plugin:
    binary_path: "{{ helm_binary }}"
    state: absent
    plugin_name: env
  register: uninstall_env

- name: Ensure uninstall idempotency
  ansible.builtin.assert:
    that:
      - not uninstall_env.changed

# https://github.com/ansible-collections/community.kubernetes/issues/399
- name: Run tests with local chart
  block:
    - name: Copy required plugin files
      ansible.builtin.copy:
        src: "files/sample_plugin"
        dest: "/tmp/helm_plugin_test/"

    - name: Install sample_plugin from the directory
      kubernetes.core.helm_plugin:
        binary_path: "{{ helm_binary }}"
        state: present
        plugin_path: "/tmp/helm_plugin_test/sample_plugin"
      register: sample_plugin_output

    - name: Assert that sample_plugin is installed or not
      ansible.builtin.assert:
        that:
          - sample_plugin_output.changed

    - name: Gather Helm plugin info
      kubernetes.core.helm_plugin_info:
        binary_path: "{{ helm_binary }}"
      register: result

    - name: Set sample_plugin version
      ansible.builtin.set_fact:
        plugin_version: "{{ ( result.plugin_list | selectattr('name', 'equalto', plugin_name) | list )[0].version }}"
      vars:
        plugin_name: "sample_plugin"

    - name: Assert if sample_plugin with multiline comment is installed
      ansible.builtin.assert:
        that:
          - plugin_version == "0.0.1"
  always:
    - name: Uninstall sample_plugin
      kubernetes.core.helm_plugin:
        binary_path: "{{ helm_binary }}"
        state: absent
        plugin_name: sample_plugin
      failed_when: false

- name: Run tests
  block:
    - name: Uninstall helm plugin secrets
      kubernetes.core.helm_plugin:
        binary_path: "{{ helm_binary }}"
        plugin_name: secrets
        state: absent

    - name: Install helm-secrets on a specific version
      kubernetes.core.helm_plugin:
        binary_path: "{{ helm_binary }}"
        plugin_path: https://github.com/jkroepke/helm-secrets
        plugin_version: 3.4.1
        state: present

    - name: List helm plugin
      helm_plugin_info:
        plugin_name: secrets
        binary_path: "{{ helm_binary }}"
      register: plugin_list

    - name: Assert that secrets has been installed with specified version
      ansible.builtin.assert:
        that:
          - plugin_list.plugin_list[0].version == "3.4.1"

    - name: Update helm plugin version to latest
      kubernetes.core.helm_plugin:
        binary_path: "{{ helm_binary }}"
        plugin_name: secrets
        state: latest
      register: _update

    - name: Assert update was performed
      ansible.builtin.assert:
        that:
          - _update.changed
          - '"Updated plugin: secrets" in _update.stdout'

  always:
    - name: Uninstall sample_plugin
      kubernetes.core.helm_plugin:
        binary_path: "{{ helm_binary }}"
        state: absent
        plugin_name: secrets
      failed_when: false
