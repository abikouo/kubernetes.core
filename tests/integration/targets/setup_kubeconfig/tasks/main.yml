---
- name: Fail when bad value for kubeconfig_operation
  ansible.builtin.fail:
    msg: "kubeconfig_operation must be one of 'revert' or 'save'"
  when: kubeconfig_operation not in ["revert", "save"]

- name: Set variables
  ansible.builtin.set_fact:
    src_kubeconfig: "{{ (kubeconfig_operation == 'save') | ternary(kubeconfig_default_path, kubeconfig_custom_path) }}"
    dest_kubeconfig: "{{ (kubeconfig_operation == 'save') | ternary(kubeconfig_custom_path, kubeconfig_default_path) }}"

- name: Check if source kubeconfig exists
  ansible.builtin.stat:
    path: "{{ src_kubeconfig }}"
  register: _src

- name: Check if destination kubeconfig exists
  ansible.builtin.stat:
    path: "{{ dest_kubeconfig }}"
  register: _dest

- name: Fail if both variables are defined
  ansible.builtin.fail:
    msg: "Both {{ src_kubeconfig }} and {{ dest_kubeconfig }} do not exist."
  when:
    - not _src.stat.exists
    - not _dest.stat.exists

- name: Generate user cert_file, key_file, and hostname
  when: user_credentials_dir is defined
  block:
    - name: Generate user credentials files
      test_inventory_read_credentials:
        kube_config: "{{ (_src.stat.exists) | ternary(src_kubeconfig, dest_kubeconfig) }}"
        dest_dir: "{{ user_credentials_dir }}"

- name: Copy kubeconfig into final path
  when: _src.stat.exists
  block:
    - name: "Copy {{ src_kubeconfig }} into {{ dest_kubeconfig }}"
      ansible.builtin.copy:
        remote_src: true
        src: "{{ src_kubeconfig }}"
        dest: "{{ dest_kubeconfig }}"

    - name: "Delete {{ src_kubeconfig }}"
      ansible.builtin.file:
        state: absent
        path: "{{ src_kubeconfig }}"
