---
- block:
  - set_fact:
      selector_namespace: "selector"
      selector_pod_delete: "pod-selector-delete"
      selector_pod_apply: "pod-selector-apply"
      selector_pod_create:
      - "pod-selector-apply-00"
      - "pod-selector-apply-01"

  - name: Ensure namespace selector
    k8s:
      kind: namespace
      name: '{{ selector_namespace }}'

  # Resource deletion using label selector
  - name: Create simple pod
    k8s:
      namespace: '{{ selector_namespace }}'
      definition:
        apiVersion: v1
        kind: Pod
        metadata:
          name: '{{ selector_pod_delete }}'
          labels:
            ansible.dev/team: "cloud"
            ansible.release/version: upstream
            ansible.dev/test: "true"
        spec:
          containers:
          - name: c0
            image: busybox
            command:
            - /bin/sh
            - -c
            - while true;do date;sleep 5; done

  - name: Delete all resource using selector
    k8s:
      state: absent
      kind: Pod
      namespace: '{{ selector_namespace }}'
      label_selectors:
      - ansible.dev/team=cloud
      wait: yes
      wait_timeout: 180

  - name: Ensure resources have been deleted
    k8s_info:
      kind: Pod
      namespace: '{{ selector_namespace }}'
      label_selectors:
      - ansible.dev/team=cloud
    register: result

  - assert:
      that:
      - result.resources == []

  # Resource creation using label selector
  - name: Create simple pod using label_selectors option (no resource matching label)
    k8s:
      namespace: '{{ selector_namespace }}'
      label_selectors:
      - ansible.pod/created=true
      definition: |
        ---
        apiVersion: v1
        kind: Pod
        metadata:
          name: '{{ selector_pod_create[0] }}'
          labels:
            ansible.pod/created: "false"
        spec:
          containers:
          - name: c0
            image: busybox
            command:
              - /bin/sh
              - -c
              - while true;do date;sleep 5; done
        ---
        apiVersion: v1
        kind: Pod
        metadata:
          name: '{{ selector_pod_create[1] }}'
          labels:
            ansible.pod/created: "false"
        spec:
          containers:
          - name: c0
            image: busybox
            command:
              - /bin/sh
              - -c
              - while true;do date;sleep 5; done
    register: result

  - assert:
      that:
      - result is not changed

  - name: Create simple pod using label_selectors option
    k8s:
      namespace: '{{ selector_namespace }}'
      label_selectors:
      - ansible.pod/created=true
      definition: |
        ---
        apiVersion: v1
        kind: Pod
        metadata:
          name: '{{ selector_pod_create[0] }}'
          labels:
            ansible.pod/created: "false"
        spec:
          containers:
          - name: c0
            image: busybox
            command:
              - /bin/sh
              - -c
              - while true;do date;sleep 5; done
        ---
        apiVersion: v1
        kind: Pod
        metadata:
          name: '{{ selector_pod_create[1] }}'
          labels:
            ansible.pod/created: "true"
        spec:
          containers:
          - name: c0
            image: busybox
            command:
              - /bin/sh
              - -c
              - while true;do date;sleep 5; done
    register: result

  - assert:
      that:
      - result is changed

  - name: list pod created
    k8s_info:
      namespace: '{{ selector_namespace }}'
      kind: Pod
    register: pod_created

  - name: Validate that pod with matching label was created
    assert:
      that:
      - selector_pod_create[0] not in pods_created
      - selector_pod_create[1] in pods_created
    vars:
      pods_created: '{{ pod_created.resources | map(attribute="metadata.name") | list }}'

  # Resource update using apply
  - name: Create simple pod using apply
    k8s:
      namespace: '{{ selector_namespace }}'
      apply: yes
      definition:
        apiVersion: v1
        kind: Pod
        metadata:
          name: '{{ selector_pod_apply }}'
          labels:
            ansible.dev/test: "false"
        spec:
          containers:
          - name: c0
            image: busybox:1.31.0
            command:
            - /bin/sh
            - -c
            - while true;do date;sleep 5; done

  - name: Apply new pod definition using label_selectors (no match)
    k8s:
      namespace: '{{ selector_namespace }}'
      apply: yes
      definition:
        apiVersion: v1
        kind: Pod
        metadata:
          name: '{{ selector_pod_apply }}'
          labels:
            ansible.dev/test: "false"
        spec:
          containers:
          - name: c0
            image: busybox:1.33.0
            command:
            - /bin/sh
            - -c
            - while true;do date;sleep 5; done
      label_selectors:
      - ansible.dev/test=true
    register: result

  - name: check task output
    assert:
      that:
      - result is not changed
      - '"filtered by label_selectors" in result.warning'

  - name: Apply new pod definition using label_selectors
    k8s:
      namespace: '{{ selector_namespace }}'
      apply: yes
      definition:
        apiVersion: v1
        kind: Pod
        metadata:
          name: '{{ selector_pod_apply }}'
          labels:
            ansible.dev/test: "false"
        spec:
          containers:
          - name: c0
            image: busybox:1.33.0
            command:
            - /bin/sh
            - -c
            - while true;do date;sleep 5; done
      label_selectors:
      - ansible.dev/test=false
    register: result

  - name: check task output
    assert:
      that:
      - result is changed

  always:
  - name: Ensure namespace is deleted
    k8s:
      kind: Namespace
      name: '{{ selector_namespace }}'
      state: absent
    ignore_errors: true
